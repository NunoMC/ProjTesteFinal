/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import bll.Ficheiro;
import bll.LoteBLL;
import bll.ProdutoBLL;
import java.math.BigDecimal;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Lote;
import model.Produto;

/**
 *
 * @author NunoM
 */
public class Produtos extends javax.swing.JPanel {

    private Produto pr;

    public Produtos() {
        initComponents();

        Login l = new Login();

         // labelRecebeFunc.setText("aa");
        actualizaDados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        labelRecebeFunc = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProd = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ProdDesc = new javax.swing.JTextField();
        ProdPrec = new javax.swing.JTextField();
        btNovo = new javax.swing.JButton();
        btEdit = new javax.swing.JButton();
        btElim = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setText("Produto");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Funcionário:");

        tableProd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Descrição", "Preço", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProdMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableProd);
        if (tableProd.getColumnModel().getColumnCount() > 0) {
            tableProd.getColumnModel().getColumn(2).setMinWidth(0);
            tableProd.getColumnModel().getColumn(2).setPreferredWidth(0);
            tableProd.getColumnModel().getColumn(2).setMaxWidth(0);
        }

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Descrição:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("Preço:");

        btNovo.setText("Novo");
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });

        btEdit.setText("Editar");
        btEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditActionPerformed(evt);
            }
        });

        btElim.setText("Eliminar");
        btElim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btElimActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ProdDesc)
                            .addComponent(ProdPrec, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btElim, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(btNovo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelRecebeFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 821, Short.MAX_VALUE))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelRecebeFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(ProdDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(ProdPrec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btElim)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed

        if (ProdDesc.getText().isEmpty() || ProdPrec.getText().isEmpty()) {
            String messag = "Campos Vazios!!";
            String titl = "Insira descrição e preço";
            int reply = JOptionPane.showConfirmDialog(null, messag, titl, JOptionPane.DEFAULT_OPTION);
        } else {

            pr = new Produto();
            pr.setDescricao(ProdDesc.getText());
            pr.setPreco(new BigDecimal(ProdPrec.getText()));
            ProdutoBLL.create(pr);

            actualizaDados();

        }

    }//GEN-LAST:event_btNovoActionPerformed

    private void btEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditActionPerformed
        DefaultTableModel model = (DefaultTableModel) tableProd.getModel();
        if (tableProd.getSelectedRow() == -1) {
            if (tableProd.getRowCount() == 0) {
                String messag = "Tabela Vazia!!";
                String titl = "Sem dados";
                int reply = JOptionPane.showConfirmDialog(null, messag, titl, JOptionPane.DEFAULT_OPTION);
            } else {
                String messag = "Aviso!!";
                String titl = "Selecione um Produto";
                int reply = JOptionPane.showConfirmDialog(null, messag, titl, JOptionPane.DEFAULT_OPTION);
            }
        } else {

            int id = Integer.parseInt(model.getValueAt(tableProd.getSelectedRow(), 2).toString());

            pr = ProdutoBLL.retrieve(id);
            pr.setDescricao(ProdDesc.getText());
            pr.setPreco(new BigDecimal(ProdPrec.getText()));
            ProdutoBLL.refreshEntity(pr);
            actualizaDados();

            String messag = "Com Sucesso!!";
            String titl = "Editado";
            int reply = JOptionPane.showConfirmDialog(null, messag, titl, JOptionPane.DEFAULT_OPTION);
        }


    }//GEN-LAST:event_btEditActionPerformed

    private void tableProdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProdMouseClicked
        DefaultTableModel model = (DefaultTableModel) tableProd.getModel();
        ProdDesc.setText(model.getValueAt(tableProd.getSelectedRow(), 0).toString());
        ProdPrec.setText(model.getValueAt(tableProd.getSelectedRow(), 1).toString());
    }//GEN-LAST:event_tableProdMouseClicked

    private void btElimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btElimActionPerformed
        DefaultTableModel model = (DefaultTableModel) tableProd.getModel();
        if (tableProd.getSelectedRow() == -1) {
            if (tableProd.getRowCount() == 0) {
                String messag = "Tabela Vazia!!";
                String titl = "Sem dados";
                int reply = JOptionPane.showConfirmDialog(null, messag, titl, JOptionPane.DEFAULT_OPTION);
            } else {
                String messag = "Aviso!!";
                String titl = "Selecione um Cliente";
                int reply = JOptionPane.showConfirmDialog(null, messag, titl, JOptionPane.DEFAULT_OPTION);
            }
        } else {

            int id = Integer.parseInt(model.getValueAt(tableProd.getSelectedRow(), 2).toString());

            for (Lote a : LoteBLL.retrieveLote(id)) {
                LoteBLL.delete(a);
            }
            ProdutoBLL.delete(ProdutoBLL.retrieve(id));

            ProdDesc.setText("");
            ProdPrec.setText("");
            actualizaDados();
            String messag = "Com Sucesso!!";
            String titl = "Eliminado";
            int reply = JOptionPane.showConfirmDialog(null, messag, titl, JOptionPane.DEFAULT_OPTION);
        }
    }//GEN-LAST:event_btElimActionPerformed

    public void limparJTable() {
        javax.swing.table.DefaultTableModel model2 = (javax.swing.table.DefaultTableModel) tableProd.getModel();
        model2.setRowCount(0);
    }

    public void actualizaDados() {

        limparJTable();
        if (ProdutoBLL.retrieveALL() != null) {
            javax.swing.table.DefaultTableModel model1 = (javax.swing.table.DefaultTableModel) tableProd.getModel();
            for (Produto a : ProdutoBLL.retrieveALL()) {
                model1.addRow(new Object[]{a.getDescricao(), a.getPreco(), a.getIdProduto()});
            }
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ProdDesc;
    private javax.swing.JTextField ProdPrec;
    private javax.swing.JButton btEdit;
    private javax.swing.JButton btElim;
    private javax.swing.JButton btNovo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelRecebeFunc;
    private javax.swing.JTable tableProd;
    // End of variables declaration//GEN-END:variables
}
